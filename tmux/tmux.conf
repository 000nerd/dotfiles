#     ███       ▄▄▄▄███▄▄▄▄   ███    █▄  ▀████    ▐████▀
# ▀█████████▄ ▄██▀▀▀███▀▀▀██▄ ███    ███   ███▌   ████▀
#    ▀███▀▀██ ███   ███   ███ ███    ███    ███  ▐███
#     ███   ▀ ███   ███   ███ ███    ███    ▀███▄███▀
#     ███     ███   ███   ███ ███    ███    ████▀██▄
#     ███     ███   ███   ███ ███    ███   ▐███  ▀███
#     ███     ███   ███   ███ ███    ███  ▄███     ███▄
#    ▄████▀    ▀█   ███   █▀  ████████▀  ████       ███▄

# Colors Everywhere
set -g default-terminal "xterm-256color-italic"
set-option -ga terminal-overrides ",xterm-256color-italic:Tc"

set -g history-limit 10000

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Shift Arrow to Show/Hide Status Bar
bind-key -n S-Up set-option -g status
bind-key -n S-Down set-option -g status

# By default, all windows in a session are constrained to the size of the
# smallest client connected to that session,
# even if both clients are looking at different windows.
# It seems that in this particular case, Screen has the better default
# where a window is only constrained in size if a smaller client
# is actively looking at it.
setw -g aggressive-resize on

# ==================================================================================================
# Status line
# ==================================================================================================

set-option -g status-left "#(~/.tmux/status.sh left)"
set-option -g status-right "#(~/.tmux/status.sh right)"

# ==================================================================================================
# Plugins
# ==================================================================================================
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'christoomey/vim-tmux-navigator'
run '~/.tmux/plugins/tpm/tpm'

# ==================================================================================================
# Others to be Merged
# ==================================================================================================
# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

bind x kill-pane
bind t set status

bind-key -n S-left prev
bind-key -n S-right next
bind-key -n C-left swap-window -t -1
bind-key -n C-right swap-window -t +1

set -g pane-active-border-fg colour10

setw -g window-status-format "#[bg=default,fg=colour8,noreverse]▉▊▋▌ #W "
setw -g window-status-current-format "#[bg=default,fg=colour7,noreverse]▉▊▋▌ #W "

# Window switching
bind -n S-up    new-window
bind -n S-down  confirm-before -p "kill-window #W? (y/n)" kill-window
bind -n S-left  prev
bind -n S-right next

# Pane switching
bind -n C-left  select-pane -L
bind -n C-right select-pane -R
bind -n C-down  select-pane -D
bind -n C-up    select-pane -U

# Special pane operations
bind -n C-M-up    respawn-pane -k
bind -n C-M-down  kill-pane
bind -n C-M-left  swap-pane -U
bind -n C-M-right swap-pane -D

# Window splitting
bind -n C-M-\ split-window -h
bind -n C-M-] split-window -v

# Page Up/ Page down using J/K
bind-key -t vi-copy "J" page-down
bind-key -t vi-copy "K" page-up

#  However, the -r flag allows commands to be repeatable
bind -r p select-window -t :-
bind -r n select-window -t :+
