#!/usr/bin/env zsh

#  $$$$$$$$\ $$\   $$\ $$\   $$\  $$$$$$\ $$$$$$$$\ $$$$$$\  $$$$$$\  $$\   $$\  $$$$$$\
#  $$  _____|$$ |  $$ |$$$\  $$ |$$  __$$\\__$$  __|\_$$  _|$$  __$$\ $$$\  $$ |$$  __$$\
#  $$ |      $$ |  $$ |$$$$\ $$ |$$ /  \__|  $$ |     $$ |  $$ /  $$ |$$$$\ $$ |$$ /  \__|
#  $$$$$\    $$ |  $$ |$$ $$\$$ |$$ |        $$ |     $$ |  $$ |  $$ |$$ $$\$$ |\$$$$$$\
#  $$  __|   $$ |  $$ |$$ \$$$$ |$$ |        $$ |     $$ |  $$ |  $$ |$$ \$$$$ | \____$$\
#  $$ |      $$ |  $$ |$$ |\$$$ |$$ |  $$\   $$ |     $$ |  $$ |  $$ |$$ |\$$$ |$$\   $$ |
#  $$ |      \$$$$$$  |$$ | \$$ |\$$$$$$  |  $$ |   $$$$$$\  $$$$$$  |$$ | \$$ |\$$$$$$  |
#  \__|       \______/ \__|  \__| \______/   \__|   \______| \______/ \__|  \__| \______/

# find shorthand
function f() {
    find . -name "$1"
}

# take this repo and copy it to somewhere else minus the .git stuff.
function gitexport(){
    mkdir -p "$1"
    git archive master | tar -x -C "$1"
}

# Streamlink functions
function slw() {
    streamlink -O "$1" best | tee "$2_$( date +%Y%m%d_%H%M%S ).ts" | vlc -
}

# Escape UTF-8 characters into their 3-byte format
function escape() {
    printf "\\\x%s" $(printf "$@" | xxd -p -c1 -u)
    echo # newline
}

function clipcopy() {
    pbcopy < "${1:-/dev/stdin}";
}

function clippaste() {
    pbpaste;
}

function open_command() {
    local open_cmd

    # define the open command
    case "$OSTYPE" in
        darwin*)  open_cmd='open' ;;
        cygwin*)  open_cmd='cygstart' ;;
        linux*)   [[ "$(uname -r)" != *icrosoft* ]] && open_cmd='nohup xdg-open' || {
                    open_cmd='cmd.exe /c start ""'
                    [[ -e "$1" ]] && { 1="$(wslpath -w "${1:a}")" || return 1 }
                } ;;
        msys*)    open_cmd='start ""' ;;
        *)        echo "Platform $OSTYPE not supported"
                return 1
                    ;;
    esac

    ${=open_cmd} "$@" &>/dev/null
}

function copyfile {
    emulate -L zsh
    clipcopy $1
}

# Copies the path of given directory or file to the system or X Windows clipboard.
# Copy current directory if no parameter.
function copypath {
    # If no argument passed, use current directory
    local file="${1:-.}"

    # If argument is not an absolute path, prepend $PWD
    [[ $file = /* ]] || file="$PWD/$file"

    # Copy the absolute path without resolving symlinks
    # If clipcopy fails, exit the function with an error
    print -n "${file:a}" | clipcopy || return 1

    echo ${(%):-"%B${file:a}%b copied to clipboard."}
}

# Switch DB enviroments
function sdb() {
    db_env=$1
    case ${db_env:u} in
        LOCAL)
            echo "Using Local DB instance"
            ln -sf $HOME/.config/nettracer/datasource.local.properties $HOME/.config/nettracer/datasource.properties
            ln -sf $HOME/.config/nettracer/ntrdatasource.local.properties $HOME/.config/nettracer/ntrdatasource.properties
            ;;
        TESTING)
            echo "Using Testing DB instance"
            ln -sf $HOME/.config/nettracer/datasource.testing.properties $HOME/.config/nettracer/datasource.properties
            ln -sf $HOME/.config/nettracer/ntrdatasource.testing.properties $HOME/.config/nettracer/ntrdatasource.properties
            ;;
        TRAINING)
            echo "Using Training DB instance"
            ln -sf $HOME/.config/nettracer/datasource.training.properties $HOME/.config/nettracer/datasource.properties
            ln -sf $HOME/.config/nettracer/ntrdatasource.training.properties $HOME/.config/nettracer/ntrdatasource.properties
            ;;
        QA3)
            echo "Using QA3 DB instance"
            ln -sf $HOME/.config/nettracer/datasource.qa3.properties $HOME/.config/nettracer/datasource.properties
            ln -sf $HOME/.config/nettracer/ntrdatasource.qa3.properties $HOME/.config/nettracer/ntrdatasource.properties
            ;;
        QA2)
            echo "Using QA2 DB instance"
            ln -sf $HOME/.config/nettracer/datasource.qa2.properties $HOME/.config/nettracer/datasource.properties
            ln -sf $HOME/.config/nettracer/ntrdatasource.qa2.properties $HOME/.config/nettracer/ntrdatasource.properties
            ;;
        *)
            echo "Using QA1 DB instance"
            ln -sf $HOME/.config/nettracer/datasource.qa1.properties $HOME/.config/nettracer/datasource.properties
            ln -sf $HOME/.config/nettracer/ntrdatasource.qa1.properties $HOME/.config/nettracer/ntrdatasource.properties
            ;;
    esac
}
