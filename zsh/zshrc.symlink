#!/usr/bin/env zsh

#  $$$$$$$$\  $$$$$$\  $$\   $$\ $$$$$$$\   $$$$$$\
#  \____$$  |$$  __$$\ $$ |  $$ |$$  __$$\ $$  __$$\
#      $$  / $$ /  \__|$$ |  $$ |$$ |  $$ |$$ /  \__|
#     $$  /  \$$$$$$\  $$$$$$$$ |$$$$$$$  |$$ |
#    $$  /    \____$$\ $$  __$$ |$$  __$$< $$ |
#   $$  /    $$\   $$ |$$ |  $$ |$$ |  $$ |$$ |  $$\
#  $$$$$$$$\ \$$$$$$  |$$ |  $$ |$$ |  $$ |\$$$$$$  |
#  \________| \______/ \__|  \__|\__|  \__| \______/

# Load the shell dotfiles, and then some:
for file in ~/.dotfiles/zsh/zsh/{aliases,completion,exports,functions,prompt}; do
    [ -r "$file" ] && [ -f "$file" ] && source "$file";
done;
unset file;

###############################################################################
#                                 SETTINGS                                    #
###############################################################################
# show completion menu on successive tab press
setopt AUTO_MENU
# cursor moved to end of word if completion started
setopt COMPLETE_IN_WORD
# cursor moved to end of word after completion
setopt ALWAYS_TO_END
# correct spelling of all arguments
setopt CORRECT_ALL
# case insensitive globbing
setopt NO_CASE_GLOB
# if directory given with no command, then cd into it
setopt AUTO_CD
# share command history data
setopt SHARE_HISTORY
#save only one command if 2 common are same and consistent
setopt HIST_IGNORE_DUPS
# ignore commands that start with space
setopt HIST_IGNORE_SPACE
#add timestamp for each entry
setopt EXTENDED_HISTORY
# delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt HIST_EXPIRE_DUPS_FIRST
# show command with history expansion to user before running it
setopt HIST_VERIFY
###############################################################################
#                                 PATHS                                       #
###############################################################################

# JENV Path
export PATH="$HOME/.jenv/bin:$PATH"
# Gradle, Maven, Wildfly Path
export PATH="$GRADLE_HOME/bin:$PATH"
# Android
export PATH="$ANDROID_HOME/platform-tools:$PATH"
export PATH="$ANDROID_HOME/emulator:$PATH"
# Dotfiles Path
export PATH="$HOME/.dotfiles/bins:$PATH"
# anaconda3
export PATH="$CONDA_HOME/bin:$PATH"
# .local
export PATH="$HOME/.local/bin:$PATH"

###############################################################################
#                         Language Version Managers                           #
###############################################################################

#JENV Eval
eval "$(jenv init -)"

# Source NVM
export NVM_DIR="$HOME/.nvm"
[ -s "$(brew --prefix)/opt/nvm/nvm.sh" ] && . "$(brew --prefix)/opt/nvm/nvm.sh" # This loads nvm

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/homebrew/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/homebrew/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/opt/homebrew/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/opt/homebrew/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

###############################################################################
#                                 ZPLUG                                       #
###############################################################################
source $ZPLUG_HOME/init.zsh

# oh-my-zsh plugins
zplug "plugins/aws", from:oh-my-zsh
zplug "plugins/jira", from:oh-my-zsh
zplug "plugins/macos",   from:oh-my-zsh
# zplug "plugins/vi-mode", from:oh-my-zsh
zplug "plugins/web-search", from:oh-my-zsh
# zsh-users plugins
zplug "zsh-users/zsh-syntax-highlighting", defer:2
zplug "zsh-users/zsh-completions", defer:2
zplug "zsh-users/zsh-autosuggestions", defer:2
zplug "zsh-users/zsh-history-substring-search", defer:2


# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

# Then, source plugins and add commands to $PATH
zplug load
