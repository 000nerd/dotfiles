#!/usr/bin/env bash

####################

# Readline library configuration options
# http://ss64.com/bash/syntax-inputrc.html

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# #
# #Autocompletion
# #

# # Make Tab autocomplete regardless of filename case (cd ~/dow<Tab> => cd ~/Downloads/)
set completion-ignore-case on

# # Immediately add a trailing slash when autocompleting symlinks to directories
set mark-symlinked-directories on

# # Do not expand "~" to the home directory when completing. (The actual value passed on to the command still is expanded,
# # though. Which is good.) "Off" is the default value, but some servers override this
set expand-tilde off

# # Do not autocomplete hidden files ("dot files") unless the pattern explicitly begins with a dot
set match-hidden-files off

# # Show all autocomplete results at once
set page-completions off

# # If there are more than 200 possible completions for a word, ask to show them all
set completion-query-items 200

# # Auto list all TAB possible completions (use instead of TAB-cycling)
set show-all-if-ambiguous on

# # Show extra file information when completing, like `ls -F` does
set visible-stats on

# # Be more intelligent when autocompleting by also looking at the text after
# # the cursor. For example, when the current line is "cd ~/src/mozil", and
# # the cursor is on the "z", pressing Tab will not autocomplete it to "cd
# # ~/src/mozillail", but to "cd ~/src/mozilla". (This is supported by the
# # Readline used by Bash 4.)
set skip-completed-text on



# # Try to stay at the same position when moving through the history
# set history-preserve-point on


# #
# # Line editing
# #

# # Allow UTF-8 input and output, instead of showing stuff like $'\0123\0456'
set meta-flag on
set input-meta on
set output-meta on
set convert-meta off

# # Use Alt/Meta + Delete to delete the preceding word
# "\e[3;3~": kill-word

# set editing-mode vi
# http://vim.wikia.com/wiki/Use_vi_shortcuts_in_terminal

# $if mode=emacs
#     # Readline specific functions
#     "\e[1~": beginning-of-line           # CTRL + A
#     "\e[4~": end-of-line                 # CTRL + E
#     "\e[5C": forward-word                # Control + Right
#     "\e[5D": backward-word               # Control + Left
#     "\e[3~": delete-char                 # Delete
#     "\e[2~": quoted-insert               # CTRL + v
# # Use the text that has already been typed as the prefix for searching through
# # commands (basically more intelligent Up/Down behavior)
#     "\e[B": history-search-forward       #
#     "\e[A": history-search-backward      #

#     #"\t": menu-complete                 # Tab cycles through completions

#     # If the above prevents Left and Right from working, try this:
#     #"\e[C": forward-char                # Move forward one character.
#     #"\e[D": backward-char               # Move backwards one character.
# $endif

# # Avoid binding ^J, ^M,  ^C, ^?, ^S, ^Q, etc.
# $if mode=vi
#     set keymap vi-command
#     "gg": beginning-of-history
#     "G": end-of-history
#     "k": history-search-backward
#     "j": history-search-forward
#     "?": reverse-search-history
#     "/": forward-search-history

#     set keymap vi-insert
#     "\C-l": clear-screen
#     "\C-w": backward-kill-word
#     "\C-a": beginning-of-line
#     "\C-e": end-of-line
# $endif

# $if Bash
#     Space: magic-space
# $endif

# $if Python
# $endif

# # IPython needs this to appear at the bottom of the
# # file for clear-screen to work
# set keymap vi
